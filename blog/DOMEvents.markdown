# DOM事件机制
DOM事件机制有两种，一种是冒泡机制，一种是捕获机制。当一个事件发生在具有父元素的元素上时，浏览器运行两个不同的阶段，捕获阶段和
冒泡阶段。 在捕获阶段：浏览器检查元素的最外层祖先`<html>`，是否在捕获阶段中注册了一个onclick事件处理程序，如果是，则运行它。然后，
它移动到`<html>`中单击元素的下一个祖先元素，并执行相同的操作，然后是单击元素再下一个祖先元素，依此类推，直到到达实际点击的元素。
在冒泡阶段，恰恰相反:浏览器检查实际点击的元素是否在冒泡阶段中注册了一个onclick事件处理程序，如果是，则运行它然后它移动到下一个
直接的祖先元素，并做同样的事情，然后是下一个，等等，直到它到达<html>元素。

最早Ie浏览器使用冒泡机制，网景浏览器使用捕获机制，后来W3C委员会提出了统一解决方案，无论任何浏览器在事件发生时，都会先按照捕获机制运行
一遍，之后再按照冒泡机制运行一遍，在`baba.addEventListener('click',fn,bool)`这个函数中，如果bool参数不传值，或者为falsy值，就在
冒泡极端执行fn函数，在捕获阶段不执行，如果bool参数为true,则在捕获阶段执行fn函数，冒泡阶段不执行。
# 事件委托
冒泡还允许我们利用事件委托——这个概念依赖于这样一个事实,如果你想要在大量子元素中单击任何一个都可以运行一段代码，您可以将事件监听器设置
在其父节点上，并让子节点上发生的事件冒泡到父节点上，而不是每个子节点单独设置事件监听器。
