# JS函数的执行时机
```javascript
let i=0
for(i=0;i<6;i++){
    setTimeout(()=>{
        console.log(i)
    },0)
}
```
这段代码运行的时候，在每次进入循环之后，会执行setTimeout函数进行一定时间
等待的同时，等待的同时马上进入下一次循环，当循环全部结束之后，以及setTimeout
函数的等待时间结束，这时候才开始执行console.log,然而此时的i已经变成了6，所以
所有循环的console.log，都会打印出来6，于是结果产生6个6
 ```javascript
for(let i=0;i<6;i++){
    setTimeout(()=>{
    console.log(i)
})
}
```
当把let关键字放入for循环的初始条件里面之后，js代码就会产生神奇的效果，那就是在每次进入循环，都会复制一个i保存在这个这次循环之内，于是
当循环结束，以及等待时间结束之后，每次循环里面，都有一个i,并且分别存储着0，1，2，3，4，5，于是打印出来的也就是这个结果